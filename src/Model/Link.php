<?php

namespace Shortio\Laravel\Model;

use Shortio\Laravel\Api\Link as Api;


/**
 * Class Link
 *
 * @package Shortio\Laravel\Model
 *
 * @property string path
 * @property string title
 * @property string icon
 * @property string archived
 * @property string originalURL
 * @property string iphoneURL
 * @property string androidURL
 * @property string splitURL
 * @property string expiresAt
 * @property string expiredURL
 * @property string redirectType
 * @property string cloaking
 * @property string source
 * @property string AutodeletedAt
 * @property-read string createdAt
 * @property-read string updatedAt
 * @property-read integer DomainId
 * @property-read integer OwnerId
 * @property-read string secureShortURL
 * @property-read string shortURL
 */
class Link extends Model
{

    protected $fillable = Api::properties;

    static public function all()
    {
        $domains  = Domain::all();
        $links    = collect();
        $instance = (new static)->newInstance();
        foreach ($domains as $domain) {
            $_links = $instance->where(['domain_id' => $domain->id])->get();
            $links  = $links->merge($_links);
        }

        return $links;
    }

    public function get()
    {
        $result = parent::get(); // TODO: Change the autogenerated stub

        return $result['links'];
    }

    public function domain()
    {
        return new Domain();
    }

}